##global setting
insmod search_fs_uuid

## path to the partition holding ISO images (using UUID)
#probe -u $root --set=rootuuid
#set imgdevpath="/dev/disk/by-uuid/$rootuuid"

## but I prefer set UUID directly
set imgdevpath="/dev/disk/by-uuid/A9D5-2206"
# for USB, the following may be useful
# LABEL="GRUB2EFI"
# UUID="A9D5-2206"
# TYPE="vfat"
# PARTUUID="4155c865-5a7f-4984-bca6-3320f008484c"

menuentry 'Mint 18 Mate amd64' {
	set isofile="/iso/linuxmint-18.1-mate-64bit.iso"
	loopback loop $isofile
	linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$isofile liveimg noprompt noeject quiet splash --
	initrd (loop)/casper/initrd.lz
}

menuentry 'CloneZilla Live to RAM' {
	set isofile="/iso/clonezilla.iso"
	loopback loop $isofile
  	linux (loop)/live/vmlinuz boot=live union=overlay username=user hostname=yakkety config quiet components noswap edd=on nomodeset nodmraid ocs_live_run=\"ocs-live-general\" ocs_live_extra_param=\"\" keyboard-layouts= ocs_live_batch=\"no\" vga=791 toram=filesystem.squashfs ip= net.ifnames=0  splash i915.blacklist=yes radeonhd.blacklist=yes nouveau.blacklist=yes vmwgfx.enable_fbdev=1 findiso=$isofile
  	initrd (loop)/live/initrd.img
}

menuentry 'Tails' --class debian --class gnu-linux --class gnu --class os {
#         insmod part_msdos
#         insmod ext2
#         insmod loopback
#         insmod iso9660
         set isofile="/iso/tails-i386-2.9.1.iso"
         set root='(hd0,gpt1)'
         search --no-floppy --fs-uuid --set=root A9D5-2206
         loopback loop $isofile
         linux   (loop)/live/vmlinuz boot=live findiso=$isofile config 
         initrd  (loop)/live/initrd.img
   }

menuentry 'Arch Linux 1017-01-01' {
	set isofile="/iso/archlinux-2017.01.01-dual.iso"
	loopback loop $isofile
	linux (loop)/arch/boot/x86_64/vmlinuz archisodevice=/dev/loop0 img_dev=$imgdevpath img_loop=$isofile earlymodules=loop
	initrd (loop)/arch/boot/x86_64/archiso.img
}

menuentry 'TinyCore' {
	set isofile="/iso/TinyCore.iso"
	loopback loop $isofile
	linux (loop)/boot/vmlinuz loglevel=3 cde iso="/mnt/sdb1/iso/TinyCore.iso"
	initrd (loop)/boot/core.gz
}

menuentry 'TinyCorePlus' {
	set isofile="/iso/TinyCorePlus.iso"
	loopback loop $isofile
	linux (loop)/boot/vmlinuz loglevel=3 cde iso="/mnt/sdb1/iso/TinyCorePlus.iso"
	initrd (loop)/boot/core.gz
}

menuentry "BitDefender" {
	set isofile="/iso/bitdefender-rescue-cd.iso"
	set SQUASH="/rescue/livecd.squashfs"
	loopback cdrom $isofile
	linux (cdrom)/boot/kernel.x86_64-efi  root=/dev/ram0 real_root=/dev/loop0 loop=$SQUASH cdroot_maker=$SQUASH initrd udev cdroot  scandelay=5 lang=en quiet splash isoboot=$isofile
	initrd (cdrom)/boot/initfs.x86_64-efi
}

menuentry 'MacPuppy in RAM' {
	linux /iso/MacPuppy/vmlinuz root=/dev/ram0 pfix=ram pmedia=usbflash psubdir=/iso/MacPuppy
	initrd /iso/MacPuppy/initrd.gz
}

menuentry 'Parrot Linux' {
	set isofile="/iso/Parrot-full-3.4.1_amd64.iso"
	loopback loop $isofile
	linux (loop)/live/vmlinuz boot=live config findiso=$isofile
	initrd (loop)/live/initrd.img
}

#menuentry 'G4L (won't work under EFI )' {
#	set isofile="/iso/g4l-v0.52.iso"
#	loopback loop $isofile
#	linux (loop)/bz4x7.4 root=/dev/ram0 telnetd=yes
#	initrd (loop)/ramdisk.lzma
#}


submenu "Boot em HD " {
	#menuentry "Reboot em USB" {
	#	set root="(hd0)"
	#	chainloader +1
	#}
	menuentry "HD1 MBR" {
		set root="(hd1)"
		chainloader +1
	}
	menuentry "HD1 Particao 1" {
		set root="(hd1,msdos1)"
		chainloader +1
	}
	menuentry "HD1 Particao 2" {
		set root="(hd1,msdos2)"
		chainloader +1
	}
	menuentry "HD1 Particao 3" {
		set root="(hd1,msdos3)"
		chainloader +1
	}
	menuentry "HD2 MBR" {
		set root="(hd2)"
		chainloader +1
	}
	menuentry "HD2 Particao 1" {
		set root="(hd2,msdos1)"
		chainloader +1
	}
	menuentry "HD2 Particao 2" {
		set root="(hd2,msdos2)"
		chainloader +1
	}
	menuentry "HD2 Particao 3" {
		set root="(hd2,msdos3)"
		chainloader +1
	}
}

menuentry "Grub4dos - HBCD+"{
	# mudar (hd0,2) ou outros para diferentes computadores...

	setroot=(hd0,1)
	linux /boot/grub4dos/grub.exe
}


# Note: MEMTEST won't work under EFI


